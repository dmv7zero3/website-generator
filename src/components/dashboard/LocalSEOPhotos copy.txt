import React, { useState, useEffect } from "react";
import {
  Card,
  CardHeader,
  CardTitle,
  CardDescription,
  CardContent,
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
  Tabs,
  TabsList,
  TabsTrigger,
  TabsContent,
} from "@/components/ui";
import { Store } from "lucide-react";
import { useToast } from "@/components/ui/UseToast";
import { ApiService } from "@/lib/api";
import { useBusiness } from "@/contexts/BusinessContext";
import { GoogleMapLocation, DynamoDBLocationMap } from "@/types";

interface Store {
  id: string;
  name: string;
}

export function LocalSEOPhotos() {
  const { selectedBusiness } = useBusiness();
  const [stores, setStores] = useState<Store[]>([]);
  const [selectedStore, setSelectedStore] = useState("");
  const { toast } = useToast();

  useEffect(() => {
    if (!selectedBusiness) return;
    (async () => {
      try {
        const profile = await ApiService.getBusinessProfile(selectedBusiness);
        console.log("Fetched profile:", profile);

        if (profile && profile.googleMapLocations) {
          console.log("Google Map Locations:", profile.googleMapLocations);
          const fetchedStores: Store[] = profile.googleMapLocations.map(
            (location: GoogleMapLocation) => ({
              id: location.id,
              name: location.name,
            })
          );
          console.log(
            "Fetched store names:",
            fetchedStores.map((store) => store.name)
          );
          setStores(fetchedStores);
        }
      } catch (error) {
        console.error(error);
        toast({
          title: "Error",
          description: "Failed to load store locations",
          variant: "destructive",
        });
      }
    })();
  }, [selectedBusiness, toast]);

  if (!selectedBusiness) {
    return (
      <div className="p-6">
        <Card>
          <CardContent className="flex items-center justify-center h-32">
            <p className="text-muted-foreground">
              Please select a business to manage photos
            </p>
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="p-6 space-y-6">
      <div>
        <h1 className="text-3xl font-bold tracking-tight">Local SEO Photos</h1>
        <p className="text-muted-foreground">
          Upload photos to your Google Business Profile
        </p>
      </div>

      <Tabs value="upload" className="space-y-4">
        <TabsList>
          <TabsTrigger value="upload">Upload Photos</TabsTrigger>
          <TabsTrigger value="history">Upload History</TabsTrigger>
        </TabsList>

        <TabsContent value="upload" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Store className="w-5 h-5" />
                Select Location
              </CardTitle>
              <CardDescription>
                Choose which store location to upload photos for
              </CardDescription>
            </CardHeader>
            <CardContent>
              <Select value={selectedStore} onValueChange={setSelectedStore}>
                <SelectTrigger className="w-full md:w-[300px]">
                  <SelectValue placeholder="Select a store location..." />
                </SelectTrigger>
                <SelectContent>
                  {stores.map((store) => (
                    <SelectItem key={store.id} value={store.id}>
                      {store.name}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
}

export default LocalSEOPhotos;
